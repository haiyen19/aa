//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentManagement.CourseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CourseService.ICourseService")]
    public interface ICourseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/Save", ReplyAction="http://tempuri.org/ICourseService/SaveResponse")]
        StudentService.Response.ResponseService<int> Save(StudentService.Request.CourseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/Save", ReplyAction="http://tempuri.org/ICourseService/SaveResponse")]
        System.Threading.Tasks.Task<StudentService.Response.ResponseService<int>> SaveAsync(StudentService.Request.CourseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/Courses", ReplyAction="http://tempuri.org/ICourseService/CoursesResponse")]
        StudentService.Response.ResponseService<StudentService.Model.Course[]> Courses(StudentService.Request.PaginationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/Courses", ReplyAction="http://tempuri.org/ICourseService/CoursesResponse")]
        System.Threading.Tasks.Task<StudentService.Response.ResponseService<StudentService.Model.Course[]>> CoursesAsync(StudentService.Request.PaginationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/Course", ReplyAction="http://tempuri.org/ICourseService/CourseResponse")]
        StudentService.Response.ResponseService<StudentService.Model.Course> Course(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/Course", ReplyAction="http://tempuri.org/ICourseService/CourseResponse")]
        System.Threading.Tasks.Task<StudentService.Response.ResponseService<StudentService.Model.Course>> CourseAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/Delete", ReplyAction="http://tempuri.org/ICourseService/DeleteResponse")]
        StudentService.Response.ResponseService<int> Delete(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/Delete", ReplyAction="http://tempuri.org/ICourseService/DeleteResponse")]
        System.Threading.Tasks.Task<StudentService.Response.ResponseService<int>> DeleteAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/CourseByStudentId", ReplyAction="http://tempuri.org/ICourseService/CourseByStudentIdResponse")]
        StudentService.Response.ResponseService<StudentService.Model.Course> CourseByStudentId(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/CourseByStudentId", ReplyAction="http://tempuri.org/ICourseService/CourseByStudentIdResponse")]
        System.Threading.Tasks.Task<StudentService.Response.ResponseService<StudentService.Model.Course>> CourseByStudentIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICourseServiceChannel : StudentManagement.CourseService.ICourseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CourseServiceClient : System.ServiceModel.ClientBase<StudentManagement.CourseService.ICourseService>, StudentManagement.CourseService.ICourseService {
        
        public CourseServiceClient() {
        }
        
        public CourseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CourseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StudentService.Response.ResponseService<int> Save(StudentService.Request.CourseRequest request) {
            return base.Channel.Save(request);
        }
        
        public System.Threading.Tasks.Task<StudentService.Response.ResponseService<int>> SaveAsync(StudentService.Request.CourseRequest request) {
            return base.Channel.SaveAsync(request);
        }
        
        public StudentService.Response.ResponseService<StudentService.Model.Course[]> Courses(StudentService.Request.PaginationRequest request) {
            return base.Channel.Courses(request);
        }
        
        public System.Threading.Tasks.Task<StudentService.Response.ResponseService<StudentService.Model.Course[]>> CoursesAsync(StudentService.Request.PaginationRequest request) {
            return base.Channel.CoursesAsync(request);
        }
        
        public StudentService.Response.ResponseService<StudentService.Model.Course> Course(int Id) {
            return base.Channel.Course(Id);
        }
        
        public System.Threading.Tasks.Task<StudentService.Response.ResponseService<StudentService.Model.Course>> CourseAsync(int Id) {
            return base.Channel.CourseAsync(Id);
        }
        
        public StudentService.Response.ResponseService<int> Delete(int Id) {
            return base.Channel.Delete(Id);
        }
        
        public System.Threading.Tasks.Task<StudentService.Response.ResponseService<int>> DeleteAsync(int Id) {
            return base.Channel.DeleteAsync(Id);
        }
        
        public StudentService.Response.ResponseService<StudentService.Model.Course> CourseByStudentId(int Id) {
            return base.Channel.CourseByStudentId(Id);
        }
        
        public System.Threading.Tasks.Task<StudentService.Response.ResponseService<StudentService.Model.Course>> CourseByStudentIdAsync(int Id) {
            return base.Channel.CourseByStudentIdAsync(Id);
        }
    }
}
